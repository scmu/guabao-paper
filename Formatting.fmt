%if not lhs2tex_Formatting_fmt_read
%let lhs2tex_Formatting_fmt_read = True

%if style /= newcode
\ReadOnlyOnce{Formatting.fmt}%
\makeatletter

\let\Varid\mathit
\let\Conid\mathit
%%subst keyword a        = "\keyw{" a "}"
%%subst numeral a        = "\con{" a "}"
%%subst string  a        = "\con{\text{\tt \char34 " a "\char34}}"
%%subst char    a        = "\con{\text{\tt ''" a "''}}"

%%\colorlet{identifier}{blue!45!black}
%%\colorlet{constructor}{green!45!black}
%%\colorlet{keyword}{red!40!black}
%%\colorlet{darkgreen}{green!30!black}

%%\newcommand{\keyw}[1]{{\color{keyword}\textsf{\textbf{#1}}}}
\newcommand{\ty}[1]{\Conid{#1}}
\newcommand{\con}[1]{\Conid{#1}}
\newcommand{\id}[1]{\Varid{#1}}
\newcommand{\cl}[1]{\Varid{#1}}
\newcommand{\opsym}[1]{\mathrel{#1}}

\newcommand\Keyword[1]{\textbf{\textsf{#1}}}
\newcommand\Hide{\mathbin{\downarrow}}
\newcommand\Reveal{\mathbin{\uparrow}}

%format . = "\cdot"
%format * = "\times"

%format oplus = "(\oplus)"
%format `oplus` = "\oplus"
%format otimes = "(\otimes)"
%format `otimes` = "\otimes"
%format odot = "(\odot)"
%format `odot` = "\odot"
%format liftK op z = "\hat{" op "}_" z
%format `lodot` = "\mathbin{\hat{\odot}_z}"
%format lodot = "(\hat{\odot}_z)"
%format `loplus` = "\mathbin{\hat{\oplus}_z}"
%format loplus = "(\hat{\oplus}_z)"
%format `lotimes` = "\mathbin{\hat{\otimes}_z}"
%format lotimes = "(\hat{\otimes}_z)"
%format last' v = "\Varid{last}_" v
%format `app` = "\mathrel{\$}"

%%format <=> = "\mathrel{\Leftrightarrow}"
%format <=> = "\mathrel{\equiv}"
%format <== = "\mathrel{\Leftarrow}"
%format ==> = "\mathrel{\Rightarrow}"
%format `mem` = "\mathrel{\in}"
%format `implies` = "\mathrel{\Rightarrow}"
%format </= = "\mathrel{\not\Leftarrow}"
%format /= = "\mathrel{\ne}"

%format `sse` = "\mathrel{\subseteq}"
%format `spe` = "\mathrel{\supseteq}"
%format `union` = "\mathrel{\cup}"
%format `intersect` = "\mathrel{\cap}"

%format `max` = "\mathbin{\uparrow}"
%format `min` = "\mathbin{\downarrow}"

\def\commentbegin{\quad\{\ }
\def\commentend{\}}

\makeatother
\EndFmtInput
%endif
%endif
